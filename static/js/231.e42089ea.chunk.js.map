{"version":3,"file":"static/js/231.e42089ea.chunk.js","mappings":"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","sources":["components/metric_panel.js"],"sourcesContent":["// frontend/src/components/metric_panel.js\r\nimport React, { useMemo } from 'react';\r\nimport { PieChart, Pie, Cell, ResponsiveContainer, Legend } from 'recharts';\r\nimport WordCloud from 'react-d3-cloud'; // Đã thay đổi: Import thư viện mới\r\n\r\n// TỐI ƯU: Bọc component trong React.memo\r\nconst MetricsPanel = React.memo(({ history }) => {\r\n    \r\n  // Tính toán dữ liệu cho biểu đồ tròn (Giữ nguyên)\r\n  const pieData = useMemo(() => {\r\n    const counts = history.reduce((acc, item) => {\r\n      const sentiment = item.result.overall_sentiment || 'N/A';\r\n      acc[sentiment] = (acc[sentiment] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    return Object.keys(counts).map(key => ({ name: key, value: counts[key] }));\r\n  }, [history]);\r\n\r\n  // Xử lý dữ liệu cho Word Cloud (Giữ nguyên)\r\n  const wordCloudData = useMemo(() => {\r\n    const positiveWords = {};\r\n    const negativeWords = {};\r\n\r\n    history.forEach(item => {\r\n      const sentiment = item.result.overall_sentiment;\r\n      if (sentiment === 'Positive' || sentiment === 'Negative') {\r\n        item.result.highlighted_text.forEach(wordItem => {\r\n          if (wordItem.sentiment === 'positive') {\r\n            positiveWords[wordItem.word] = (positiveWords[wordItem.word] || 0) + 1;\r\n          } else if (wordItem.sentiment === 'negative') {\r\n            negativeWords[wordItem.word] = (negativeWords[wordItem.word] || 0) + 1;\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    // Dữ liệu đã có sẵn định dạng { text, value } phù hợp cho react-d3-cloud\r\n    const formatForCloud = (words) => Object.keys(words).map(key => ({ text: key, value: words[key] * 10 })).sort((a,b) => b.value - a.value).slice(0, 30);\r\n    \r\n    return {\r\n      positive: formatForCloud(positiveWords),\r\n      negative: formatForCloud(negativeWords)\r\n    };\r\n  }, [history]);\r\n\r\n  const COLORS = {\r\n    'Positive': 'var(--positive-color)',\r\n    'Negative': 'var(--negative-color)',\r\n    'Mixed': 'var(--accent-secondary)'\r\n  };\r\n  \r\n  // Các hàm helper để tùy chỉnh WordCloud mới\r\n  // Xác định kích thước font chữ dựa trên tần suất (value) của từ\r\n  const fontSizeMapper = word => Math.log2(word.value) * 8 + 20;\r\n  // Xác định góc xoay của từ (ngẫu nhiên 0 độ hoặc -90 độ)\r\n  const rotate = () => (Math.random() > 0.5 ? 0 : -90);\r\n\r\n  return (\r\n    <div className=\"panel metrics-panel\">\r\n      <h2 className=\"panel-title\">Thống kê Tổng quan</h2>\r\n      {history.length > 0 ? (\r\n        <>\r\n          {/* Biểu đồ tròn (Giữ nguyên) */}\r\n          <div className=\"chart-container\">\r\n            <h3>Phân bổ cảm xúc</h3>\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n              <PieChart>\r\n                <Pie data={pieData} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={60} label>\r\n                  {pieData.map((entry, index) => (\r\n                    <Cell key={`cell-${index}`} fill={COLORS[entry.name]} />\r\n                  ))}\r\n                </Pie>\r\n                <Legend />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n          \r\n          {/* Word Clouds (Đã cập nhật) */}\r\n          <div className=\"word-clouds-container\">\r\n            {wordCloudData.positive.length > 0 && \r\n              <div className=\"word-cloud\">\r\n                <h3 className=\"sentiment-positive\">Từ khóa tích cực</h3>\r\n                {/* Sử dụng component WordCloud mới và truyền props */}\r\n                <WordCloud\r\n                  data={wordCloudData.positive}\r\n                  fontSize={fontSizeMapper}\r\n                  rotate={rotate}\r\n                  padding={2}\r\n                />\r\n              </div>\r\n            }\r\n            {wordCloudData.negative.length > 0 &&\r\n              <div className=\"word-cloud\">\r\n                <h3 className=\"sentiment-negative\">Từ khóa tiêu cực</h3>\r\n                {/* Sử dụng component WordCloud mới và truyền props */}\r\n                <WordCloud\r\n                  data={wordCloudData.negative}\r\n                  fontSize={fontSizeMapper}\r\n                  rotate={rotate}\r\n                  padding={2}\r\n                />\r\n              </div>\r\n            }\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <p className=\"placeholder-text\">Chưa có đủ dữ liệu để thống kê.</p>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MetricsPanel;"],"names":["React","_ref","history","pieData","useMemo","counts","reduce","acc","item","sentiment","result","overall_sentiment","Object","keys","map","key","name","value","wordCloudData","positiveWords","negativeWords","forEach","highlighted_text","wordItem","word","formatForCloud","words","text","sort","a","b","slice","positive","negative","COLORS","fontSizeMapper","Math","log2","rotate","random","_jsxs","className","children","_jsx","length","_Fragment","ResponsiveContainer","width","height","PieChart","Pie","data","dataKey","nameKey","cx","cy","outerRadius","label","entry","index","Cell","fill","concat","Legend","WordCloud","fontSize","padding"],"sourceRoot":""}